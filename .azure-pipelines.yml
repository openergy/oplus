# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - master

strategy:
  matrix:
    LinuxPython36:
      imageName: 'ubuntu-latest'
      python.version: '3.6'
    LinuxPython37:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
    MacOSPython36:
      imageName: 'macOS-latest'
      python.version: '3.6'
    MacOSPython37:
      imageName: 'macOS-latest'
      python.version: '3.7'
    WindowsPython36:
      imageName: 'windows-latest'
      python.version: '3.6'
    WindowsPython37:
      imageName: 'windows-latest'
      python.version: '3.7'

pool:
  vmImage: $(imageName)

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      pip install flake8
      python -m flake8
    displayName: 'flake8'

  - script: |
      pip install pytest pytest-azurepipelines pytest-cov
      pytest --cov=opyplus  tests/
    displayName: 'pytest'

